"use strict";(self.webpackChunknotes_selubi_tech=self.webpackChunknotes_selubi_tech||[]).push([[988],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>v});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},b="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),b=u(n),c=a,v=b["".concat(p,".").concat(c)]||b[c]||m[c]||i;return n?r.createElement(v,l(l({ref:t},s),{},{components:n})):r.createElement(v,l({ref:t},s))}));function v(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[b]="string"==typeof e?e:a,l[1]=o;for(var u=2;u<i;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},1222:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const i={id:"setup-env-ruby",title:"Ruby environment setup with rbenv and bundler",sidebar_label:"Ruby",sidebar_position:1,tags:["Setup","Environment","Ruby"]},l=void 0,o={unversionedId:"setup/setup-env-ruby",id:"setup/setup-env-ruby",title:"Ruby environment setup with rbenv and bundler",description:"Setup for ruby development environment. We will use rbenv (version manager) + bundler (project environment manager)",source:"@site/docs/setup/env-ruby.md",sourceDirName:"setup",slug:"/setup/setup-env-ruby",permalink:"/setup/setup-env-ruby",draft:!1,editUrl:"https://github.com/Selubi/selubi.github.io/tree/main/docs/setup/env-ruby.md",tags:[{label:"Setup",permalink:"/tags/setup"},{label:"Environment",permalink:"/tags/environment"},{label:"Ruby",permalink:"/tags/ruby"}],version:"current",sidebarPosition:1,frontMatter:{id:"setup-env-ruby",title:"Ruby environment setup with rbenv and bundler",sidebar_label:"Ruby",sidebar_position:1,tags:["Setup","Environment","Ruby"]},sidebar:"defaultSidebar",previous:{title:"Python",permalink:"/setup/setup-env-python"},next:{title:"Z Shell",permalink:"/setup/setup-env-zsh"}},p={},u=[{value:"Setup project environment",id:"setup-project-environment",level:2}],s={toc:u},b="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(b,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Setup for ruby development environment. We will use ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/rbenv/rbenv"},"rbenv")," (version manager) + ",(0,a.kt)("a",{parentName:"p",href:"https://bundler.io/"},"bundler")," (project environment manager)"),(0,a.kt)("h1",{id:"setup-rbenv"},"Setup rbenv"),(0,a.kt)("p",null,"This section is for the installation of rbenv itself. It should be only done once per machine."),(0,a.kt)("p",null,"rbenv is a ruby version manager that allows installation, switching, and scoping of multiple ruby versions."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Install rbenv with OS package manager"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Mac OS"',title:'"Mac','OS"':!0},"brew install rbenv ruby-build\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Check your installation with ",(0,a.kt)("inlineCode",{parentName:"p"},"rbenv init")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"rbenv init\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Add rbenv to shell init script."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="zsh"',title:'"zsh"'},"echo '# Ruby' >> ~/.zprofile\necho 'eval \"$(rbenv init - zsh)\"' >> ~/.zprofile\n")),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},'eval "$(rbenv init - zsh)')," should be whatever is outputted by step 2."),(0,a.kt)("p",{parentName:"li"},"If you put this in ",(0,a.kt)("inlineCode",{parentName:"p"},"~/.zprofile"),", relog."),(0,a.kt)("p",{parentName:"li"},"If you put this in ",(0,a.kt)("inlineCode",{parentName:"p"},"~/.zshrc"),", run ",(0,a.kt)("inlineCode",{parentName:"p"},"source ~/.zshrc"),".")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Install the ruby version you want"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"rbenv install -l # Lists all latest stable ruby version available\nrbenv install <RUBY_VERSION> # <RUBY_VERSION> is one of the outputs from previous command.\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Set global ruby version"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"rbenv global <RUBY_VERSION>\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Check ruby installation"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"which ruby # Should output ~/.rbenv/shims/ruby instead of /bin/ruby\nruby --version # Should output previously set global ruby version\n")))),(0,a.kt)("h2",{id:"setup-project-environment"},"Setup project environment"),(0,a.kt)("p",null,"This section is for configuring project environment. It should be done per project."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Install dependencies defined in ",(0,a.kt)("inlineCode",{parentName:"p"},"Gemfile"),". On the working directory with ",(0,a.kt)("inlineCode",{parentName:"p"},"Gemfile")," run"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"bundle install\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Run the ruby file within the current project context"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"bundle exec ruby <ruby_file>\n")))))}m.isMDXComponent=!0}}]);