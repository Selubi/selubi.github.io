"use strict";(self.webpackChunkselubi_tech=self.webpackChunkselubi_tech||[]).push([[939],{3905:(e,t,n)=>{n.d(t,{Zo:()=>h,kt:()=>d});var o=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,s=function(e,t){if(null==e)return{};var n,o,s={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var r=o.createContext({}),u=function(e){var t=o.useContext(r),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},h=function(e){var t=u(e.components);return o.createElement(r.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},c=o.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,r=e.parentName,h=l(e,["components","mdxType","originalType","parentName"]),m=u(n),c=s,d=m["".concat(r,".").concat(c)]||m[c]||p[c]||a;return n?o.createElement(d,i(i({ref:t},h),{},{components:n})):o.createElement(d,i({ref:t},h))}));function d(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,i=new Array(a);i[0]=c;var l={};for(var r in t)hasOwnProperty.call(t,r)&&(l[r]=t[r]);l.originalType=e,l[m]="string"==typeof e?e:s,i[1]=l;for(var u=2;u<a;u++)i[u]=n[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}c.displayName="MDXCreateElement"},7074:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var o=n(7462),s=(n(7294),n(3905));const a={id:"setup-env-zsh",title:"Shell Setup (Z Shell)",sidebar_label:"Z Shell",tags:["Setup","Environment","Z Shell"]},i=void 0,l={unversionedId:"setup/setup-env-zsh",id:"setup/setup-env-zsh",title:"Shell Setup (Z Shell)",description:"My shell setup. I am using Z Shell (Zsh), but this documentation also includes non-zsh-exclusive general shell setup such as SSH.",source:"@site/docs/setup/env-zsh.md",sourceDirName:"setup",slug:"/setup/setup-env-zsh",permalink:"/setup/setup-env-zsh",draft:!1,editUrl:"https://github.com/Selubi/selubi.github.io/tree/main/docs/setup/env-zsh.md",tags:[{label:"Setup",permalink:"/tags/setup"},{label:"Environment",permalink:"/tags/environment"},{label:"Z Shell",permalink:"/tags/z-shell"}],version:"current",lastUpdatedAt:1686277040,formattedLastUpdatedAt:"Jun 9, 2023",frontMatter:{id:"setup-env-zsh",title:"Shell Setup (Z Shell)",sidebar_label:"Z Shell",tags:["Setup","Environment","Z Shell"]},sidebar:"defaultSidebar",previous:{title:"Python",permalink:"/setup/setup-env-python"},next:{title:"Mac OS",permalink:"/setup/setup-os-mac"}},r={},u=[{value:"Setup Oh My Zsh",id:"setup-oh-my-zsh",level:2},{value:"SSH Settings",id:"ssh-settings",level:2},{value:"Configuration Files",id:"configuration-files",level:2}],h={toc:u},m="wrapper";function p(e){let{components:t,...n}=e;return(0,s.kt)(m,(0,o.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"My shell setup. I am using ",(0,s.kt)("a",{parentName:"p",href:"https://zsh.sourceforge.io/"},"Z Shell (Zsh)"),", but this documentation also includes non-zsh-exclusive general shell setup such as SSH."),(0,s.kt)("h2",{id:"setup-oh-my-zsh"},"Setup ",(0,s.kt)("a",{parentName:"h2",href:"https://ohmyz.sh/"},"Oh My Zsh")),(0,s.kt)("p",null,"Oh My Zsh is mainly used to install themes to make the shell look pretty."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"\n')),(0,s.kt)("h2",{id:"ssh-settings"},"SSH Settings"),(0,s.kt)("h2",{id:"configuration-files"},"Configuration Files"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="~/.zprofile"',title:'"~/.zprofile"'},'# Homebrew\neval $(/opt/homebrew/bin/brew shellenv)\n\n# pyenv\nexport PYENV_ROOT="$HOME/.pyenv"\ncommand -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"\neval "$(pyenv init -)"\n\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="~/.zshrc"',title:'"~/.zshrc"'},'# If you come from bash you might have to change your $PATH.\n# export PATH=$HOME/bin:/usr/local/bin:$PATH\n\n# Path to your oh-my-zsh installation.\nexport ZSH="$HOME/.oh-my-zsh"\n\n# Set name of the theme to load --- if set to "random", it will\n# load a random theme each time oh-my-zsh is loaded, in which case,\n# to know which specific one was loaded, run: echo $RANDOM_THEME\n# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes\nZSH_THEME="robbyrussell"\n\n# Set list of themes to pick from when loading at random\n# Setting this variable when ZSH_THEME=random will cause zsh to load\n# a theme from this variable instead of looking in $ZSH/themes/\n# If set to an empty array, this variable will have no effect.\n# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )\n\n# Uncomment the following line to use case-sensitive completion.\n# CASE_SENSITIVE="true"\n\n# Uncomment the following line to use hyphen-insensitive completion.\n# Case-sensitive completion must be off. _ and - will be interchangeable.\n# HYPHEN_INSENSITIVE="true"\n\n# Uncomment one of the following lines to change the auto-update behavior\n# zstyle \':omz:update\' mode disabled  # disable automatic updates\n# zstyle \':omz:update\' mode auto      # update automatically without asking\n# zstyle \':omz:update\' mode reminder  # just remind me to update when it\'s time\n\n# Uncomment the following line to change how often to auto-update (in days).\n# zstyle \':omz:update\' frequency 13\n\n# Uncomment the following line if pasting URLs and other text is messed up.\n# DISABLE_MAGIC_FUNCTIONS="true"\n\n# Uncomment the following line to disable colors in ls.\n# DISABLE_LS_COLORS="true"\n\n# Uncomment the following line to disable auto-setting terminal title.\n# DISABLE_AUTO_TITLE="true"\n\n# Uncomment the following line to enable command auto-correction.\n# ENABLE_CORRECTION="true"\n\n# Uncomment the following line to display red dots whilst waiting for completion.\n# You can also set it to another string to have that shown instead of the default red dots.\n# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"\n# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)\n# COMPLETION_WAITING_DOTS="true"\n\n# Uncomment the following line if you want to disable marking untracked files\n# under VCS as dirty. This makes repository status check for large repositories\n# much, much faster.\n# DISABLE_UNTRACKED_FILES_DIRTY="true"\n\n# Uncomment the following line if you want to change the command execution time\n# stamp shown in the history command output.\n# You can set one of the optional three formats:\n# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"\n# or set a custom format using the strftime function format specifications,\n# see \'man strftime\' for details.\n# HIST_STAMPS="mm/dd/yyyy"\n\n# Would you like to use another custom folder than $ZSH/custom?\n# ZSH_CUSTOM=/path/to/new-custom-folder\n\n# Which plugins would you like to load?\n# Standard plugins can be found in $ZSH/plugins/\n# Custom plugins may be added to $ZSH_CUSTOM/plugins/\n# Example format: plugins=(rails git textmate ruby lighthouse)\n# Add wisely, as too many plugins slow down shell startup.\nplugins=(git)\n\nsource $ZSH/oh-my-zsh.sh\n\n# User configuration\n\n# export MANPATH="/usr/local/man:$MANPATH"\n\n# You may need to manually set your language environment\n# export LANG=en_US.UTF-8\n\n# Preferred editor for local and remote sessions\n# if [[ -n $SSH_CONNECTION ]]; then\n#   export EDITOR=\'vim\'\n# else\n#   export EDITOR=\'mvim\'\n# fi\n\n# Compilation flags\n# export ARCHFLAGS="-arch x86_64"\n\n# Set personal aliases, overriding those provided by oh-my-zsh libs,\n# plugins, and themes. Aliases can be placed here, though oh-my-zsh\n# users are encouraged to define aliases within the ZSH_CUSTOM folder.\n# For a full list of active aliases, run `alias`.\n#\n# Example aliases\n# alias zshconfig="mate ~/.zshrc"\n# alias ohmyzsh="mate ~/.oh-my-zsh"\n\n')))}p.isMDXComponent=!0}}]);