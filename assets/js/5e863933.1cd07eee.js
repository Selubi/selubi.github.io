"use strict";(self.webpackChunkselubi_tech=self.webpackChunkselubi_tech||[]).push([[495],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>d});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(a),h=r,d=c["".concat(s,".").concat(h)]||c[h]||m[h]||l;return a?n.createElement(d,i(i({ref:t},u),{},{components:a})):n.createElement(d,i({ref:t},u))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=h;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},2939:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const l={id:"setup-os-mac",title:"Mac OS Setup (Ventura)",tags:["Setup","Operating System","Mac OS"]},i=void 0,o={unversionedId:"setup/setup-os-mac",id:"setup/setup-os-mac",title:"Mac OS Setup (Ventura)",description:"My setup settings on Mac OS (Ventura). From a fresh Mac OS installation.",source:"@site/docs/setup/os-mac.md",sourceDirName:"setup",slug:"/setup/setup-os-mac",permalink:"/setup/setup-os-mac",draft:!1,editUrl:"https://github.com/Selubi/selubi.github.io/tree/main/docs/setup/os-mac.md",tags:[{label:"Setup",permalink:"/tags/setup"},{label:"Operating System",permalink:"/tags/operating-system"},{label:"Mac OS",permalink:"/tags/mac-os"}],version:"current",lastUpdatedAt:1686195137,formattedLastUpdatedAt:"Jun 8, 2023",frontMatter:{id:"setup-os-mac",title:"Mac OS Setup (Ventura)",tags:["Setup","Operating System","Mac OS"]},sidebar:"defaultSidebar",previous:{title:"Setup",permalink:"/category/setup"}},s={},p=[{value:"Install  Xcode CLI and Homebrew",id:"install--xcode-cli-and-homebrew",level:2},{value:"Setup Z shell (zsh)",id:"setup-z-shell-zsh",level:2}],u={toc:p},c="wrapper";function m(e){let{components:t,...a}=e;return(0,r.kt)(c,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"My setup settings on Mac OS (Ventura). From a fresh Mac OS installation. "),(0,r.kt)("p",null,'This setup is done at Macbook Pro 14" M2.'),(0,r.kt)("h1",{id:"system-related-settings"},"System Related Settings"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Enable dark mode at ",(0,r.kt)("inlineCode",{parentName:"li"},"System Settings > Appearance")),(0,r.kt)("li",{parentName:"ul"},"Setup Japanese <-> English input switching",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Enable Caps Lock key to ",(0,r.kt)("a",{parentName:"li",href:"https://support.apple.com/en-euro/guide/mac-help/mchl84525d76/mac"},"switch between Japanese input and English"),". ",(0,r.kt)("inlineCode",{parentName:"li"},"System Settings > Language input methods > All Input Sources > Use the Caps Lock key to switch to and from ABC")),(0,r.kt)("li",{parentName:"ul"},"Type \u30ab\u30bf\u30ab\u30ca with shift key while on hiragana input by enabling it at ",(0,r.kt)("inlineCode",{parentName:"li"},"System Settings > Language input methods > Japanese - Romaji > Shift key action > Type Katakana")),(0,r.kt)("li",{parentName:"ul"},"Disable all input mode (except Hiragana which is the default) at ",(0,r.kt)("inlineCode",{parentName:"li"},"System Settings > Language input methods > Japanese - Romaji")),(0,r.kt)("li",{parentName:"ul"},"To input weird inputs such as half-width Katakana or full-width Romaji, type with hiragana input and scroll up during the conversion."))),(0,r.kt)("li",{parentName:"ul"},"Setup keyboard",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Change modifier keys at ",(0,r.kt)("inlineCode",{parentName:"li"},"System Settings > Keyboard > Keyboard Shortcuts > Modifier Keys"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Caps Lock -> Caps Lock"),(0,r.kt)("li",{parentName:"ul"},"Control (^) key -> \u2318 Command"),(0,r.kt)("li",{parentName:"ul"},"Option (\u2325) key -> \u2325 Option"),(0,r.kt)("li",{parentName:"ul"},"Command (\u2318) key -> ^ Control"),(0,r.kt)("li",{parentName:"ul"},"Globe key -> \u2318 Command")))))),(0,r.kt)("h1",{id:"applications-setup"},"Applications Setup"),(0,r.kt)("p",null,"We install everything with Homebrew for easier app management and cleanup."),(0,r.kt)("h2",{id:"install--xcode-cli-and-homebrew"},"Install  Xcode CLI and Homebrew"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Install Xcode CLI ",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"xcode-select --install\n"))),(0,r.kt)("li",{parentName:"ol"},"Install ",(0,r.kt)("a",{parentName:"li",href:"https://brew.sh/"},"Homebrew")," and check the output for installation path.",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"\n'))),(0,r.kt)("li",{parentName:"ol"},"Add homebrew to bash profile",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'(echo; echo \'eval "$(/opt/homebrew/bin/brew shellenv)"\') >> ~/.profile\neval "$(/opt/homebrew/bin/brew shellenv)"\nwhich brew # Check path of homebrew, if empty its not registered.\n')))),(0,r.kt)("h1",{id:"development-environment-setup"},"Development Environment Setup"),(0,r.kt)("h2",{id:"setup-z-shell-zsh"},"Setup ",(0,r.kt)("a",{parentName:"h2",href:"https://zsh.sourceforge.io/"},"Z shell (zsh)")),(0,r.kt)("p",null,"We will also use the brew's zsh instead of the default one"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Install zsh",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"brew install zsh\nwhich zsh # Check path of zsh. /bin/zsh is not the brew one\n"))),(0,r.kt)("li",{parentName:"ol"},"Add it to list of shells",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'echo "$(which zsh)" | sudo tee -a /etc/shells\n'))),(0,r.kt)("li",{parentName:"ol"},"Change the default shell",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'chsh -s "$(which zsh)"\n'))),(0,r.kt)("li",{parentName:"ol"},"Readd brew to profile which is now ",(0,r.kt)("inlineCode",{parentName:"li"},".zprofile")," ",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"echo 'eval $(/opt/homebrew/bin/brew shellenv)' >> ~/.zprofile\n"))),(0,r.kt)("li",{parentName:"ol"},"Re-login the Mac OS, launch terminal and check zsh and brew settings",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"echo $SHELL # Current shell path\nwhich brew # Homebrew path\n")))))}m.isMDXComponent=!0}}]);